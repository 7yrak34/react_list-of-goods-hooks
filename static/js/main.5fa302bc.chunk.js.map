{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","sortBy","setSortBy","isReverse","setIsReverse","visibleGoods","initialGoods","soryBy","reverse","preparedGoods","sort","good1","good2","localeCompare","length","prepareGoods","className","type","cn","onClick","prev","map","good","indexOf","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA5BR,SACEC,EADF,GAGG,IADCC,EACF,EADEA,OAAQC,EACV,EADUA,QAEJC,EAAa,YAAOH,GAiB1B,OAfIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,IAAK,MACH,OAAOI,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRN,EAAUC,EAAcD,UAAYC,EAOtBM,CACnBjB,EACA,CAAES,OAAQN,EAAQO,QAASL,KAExBL,EAEL,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAuB,QAAXjB,IAEdkB,QAAS,kBAAMjB,EAAU,QAL3B,iCAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAuB,WAAXjB,IAEdkB,QAAS,kBAAMjB,EAAU,WAL3B,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAa,SAAAgB,GAAI,OAAKA,MALvC,sBAUEnB,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAU,IACVE,GAAa,IALjB,sBAaJ,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAqDA,GAA7BjB,EAAakB,QAAQD,eC1GzDE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5fa302bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype SortBy = 'abc' | 'length' | '';\n\ntype FilterParams = {\n  soryBy: SortBy,\n  reverse: boolean,\n};\n\nfunction prepareGoods(\n  initialGoods: string[],\n  { soryBy, reverse }: FilterParams,\n) {\n  const preparedGoods = [...initialGoods];\n\n  if (soryBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (soryBy) {\n        case 'abc':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortBy>('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = prepareGoods(\n    goodsFromServer,\n    { soryBy: sortBy, reverse: isReverse },\n  )\n    || goodsFromServer;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortBy !== 'abc',\n          })}\n          onClick={() => setSortBy('abc')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortBy !== 'length',\n          })}\n          onClick={() => setSortBy('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n          onClick={() => setIsReverse(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={visibleGoods.indexOf(good)}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}